import telebot
from telebot import types
import os
from dotenv import load_dotenv
from pymongo import MongoClient

try:
    client = MongoClient('mongodb://localhost:27017/')
    db = client['Subjects']
    collection = db.subjects_for_users
    print('DB connected üì∂')
except BaseException:
    print('MongoDB is not working ', BaseException)

load_dotenv()


is_prod = os.environ.get('TOKEN', None)
if is_prod:
    TOKEN = os.getenv('TOKEN')
    bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–º–∞–Ω–¥: \n'
                                      '/show - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–µ–º–∞—Ç–∏–∫\n'
                                      '/add - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞ –∏–ª–∏ —Ç–µ–º–∞—Ç–∏–∫–∏\n'
                                      '/delete - —É–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–º–∞—Ç–∏–∫–∏\n'
                                      '/deleteSite - —É–¥–∞–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞ –∏–∑ —Ç–µ–º–∞—Ç–∏–∫–∏\n'
                                      '/look (–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º–∞—Ç–∏–∫–∏) - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤ –ø–æ –¥–∞–Ω–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–µ')


@bot.message_handler(commands=['deleteSite'])
def delete_site(message):
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–∞–π—Ç–∞')
    show_all(message)
    bot.register_next_step_handler(msg, confirm_delete_site)


def confirm_delete_site(message):
    subject = message.text
    msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–∞–π—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è')
    print('–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê–ê')
    print(collection)
    query = {'subject': subject}
    for document in collection.find(query):
        print('–ê–õ–û–û–û–û–û–û–û–û–û–û–û–û')
        bot.send_message(message.chat.id, ', '.join(map(str, document['sites'])))
    bot.register_next_step_handler(msg, confirm_delete_site_forever, query)


def confirm_delete_site_forever(message, query):
    del_site = message.text
    del_site_query = {'$pull': {'sites': del_site}}
    collection.update_one(query, del_site_query)
    bot.send_message(message.chat.id, '–°–∞–π—Ç {0} —É–¥–∞–ª–µ–Ω.'.format(del_site))


@bot.message_handler(commands=['look'])
def show_sites_in_subject(message):
    subject = message.text
    split = ' '.join(subject.split()[1:])
    print(split)
    for document in collection.find({'subject': split}):
        bot.send_message(message.chat.id, ', '.join(map(str, document['sites'])))
        print('simple doc: ', document)
        print(document['sites'])


@bot.message_handler(commands=['show'])
def show_all(message):
    for document in collection.find():
        bot.send_message(message.chat.id, document['subject'])


@bot.message_handler(commands=['delete'])
def delete_subject(message):
    msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:')
    show_all(message)
    bot.register_next_step_handler(msg, confirm_delete)


def confirm_delete(message):
    deleteSubject = message.text
    if collection.find_one({'subject': deleteSubject}) is not None:
        collection.delete_one({'subject': deleteSubject})
        bot.send_message(message.chat.id, '–¢–µ–º–∞—Ç–∏–∫–∞ {0} —É–¥–∞–ª–µ–Ω–∞.'.format(deleteSubject))
    else:
        bot.send_message(message.chat.id, '–¢–µ–º–∞—Ç–∏–∫–∞ {0} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.'.format(deleteSubject))


@bot.message_handler(commands=['add'])
def choose_whats_next(message):
    keyboard = types.InlineKeyboardMarkup()
    key_add_subject = types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Ç–µ–º–∞—Ç–∏–∫—É', callback_data='add_subject')
    key_add_sites = types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç –∫ —Ç–µ–º–∞—Ç–∏–∫–µ', callback_data='add_sites')
    keyboard.add(key_add_sites, key_add_subject)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Å–¥–µ–ª–∞—Ç—å', reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)
def add_subject(call):
    if call.data == 'add_subject':
        msg = bot.send_message(call.message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–º–∞—Ç–∏–∫–∏')
        bot.register_next_step_handler(msg, input_subject)
    if call.data == 'add_sites':
        msg = bot.send_message(call.message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É')
        show_all(call.message)
        bot.register_next_step_handler(msg, add_sites)


def input_subject(message):
    subjectText = message.text
    if collection.find_one({'subject': subjectText}) is not None:
        bot.send_message(message.chat.id, '–¢–µ–º–∞—Ç–∏–∫–∞ {0} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.'.format(subjectText))
    else:
        dictionary = {'subject': subjectText, 'sites': []}
        collection.insert_one(dictionary)
        bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ! –¢–µ–º–∞—Ç–∏–∫–∞ {0} –¥–æ–±–∞–≤–ª–µ–Ω–∞.'.format(subjectText))


def add_sites(message):
    updateSubject = message.text
    query = {'subject': updateSubject}
    if collection.find_one(query) is not None:
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è')
        bot.register_next_step_handler(msg, update_sites, query)
    else:
        bot.send_message(message.chat.id, '{0} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'.format(updateSubject))


def update_sites(message, query):
    site = message.text
    newSite = {'$push': {'sites': site}}
    print(query)
    print(newSite)
    collection.update_one(query, newSite)
    bot.send_message(message.chat.id, '–°–∞–π—Ç –¥–æ–±–∞–≤–ª–µ–Ω')


print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
bot.infinity_polling()
